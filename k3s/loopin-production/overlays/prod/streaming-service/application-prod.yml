server:
  port: 8080
  shutdown: graceful
  netty:
    connection-timeout: 2s
    idle-timeout: 30s

spring:
  application:
    name: streaming-service
  main:
    web-application-type: reactive
    allow-bean-definition-overriding: true
  lifecycle:
    timeout-per-shutdown-phase: 15s
  r2dbc:
    username: ${R2DBC_USERNAME}
    password: ${R2DBC_PASSWORD}
    url: r2dbc:postgresql://streaming-service-postgresql:5432/loopin_streaming
    pool:
      max-create-connection-time: 2s
      initial-size: 5
      max-size: 10
  flyway:
    user: ${spring.r2dbc.username}
    password: ${spring.r2dbc.password}
    url: jdbc:postgresql://streaming-service-postgresql:5432/loopin_streaming
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://auth.loopin.bid/realms/loopin

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
  level:
    com.loopin.streaming_service: debug

streaming:
  base-url: https://api.loopin.bid
  rtmp-url: rtmp://ingest.loopin.bid:1935/live

management:
  endpoints:
    web:
      exposure:
        include: configprops, env, health, heapdump, info, loggers, mappings, prometheus
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
      group:
        readiness:
          include: readinessState
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
